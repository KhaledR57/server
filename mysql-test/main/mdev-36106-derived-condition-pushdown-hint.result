create table t1 (a int, b int, c int);
create table t2 (a int, b int, c int, d decimal);
insert into t1 values
(1,21,345), (1,33,7), (8,33,114), (1,21,500), (1,19,107), (5,14,787),
(8,33,123), (9,10,211), (5,16,207), (1,33,988), (5,27,132), (1,21,104),
(6,20,309), (6,20,315), (1,21,101), (8,33,404), (9,10,800), (1,21,123),
(7,11,708), (6,20,214);
insert into t2 values
(2,3,207,207.0000), (1,21,909,12.0000), (7,13,312,406.0000),
(8,64,248,107.0000), (6,20,315,279.3333), (1,19,203,107.0000),
(8,80,800,314.0000), (3,12,231,190.0000), (6,23,303,909.0000);
Warnings:
Note	1265	Data truncated for column 'd' at row 5
create view v1 as select a, b, max(c) as max_c, avg(c) as avg_c from t1
group by a,b having max_c < 707;
set @save_optimizer_trace=@@optimizer_trace;
set @save_optimizer_switch=@@optimizer_switch;
set optimizer_trace='enabled=on';
set session optimizer_switch='condition_pushdown_for_derived=on';
explain select * from v1,t2 where
((v1.max_c>300) and (v1.avg_c>t2.d) and (v1.b=t2.b)) or
((v1.max_c<135) and (v1.max_c<t2.c) and (v1.a=t2.a));
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	NULL	NULL	NULL	NULL	9	
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	20	Using where; Using join buffer (flat, BNL join)
2	DERIVED	t1	ALL	NULL	NULL	NULL	NULL	20	Using temporary; Using filesort
select json_extract(trace, '$.steps[1].join_optimization.steps[1].join_optimization.steps[0].condition_processing') from information_schema.optimizer_trace;
json_extract(trace, '$.steps[1].join_optimization.steps[1].join_optimization.steps[0].condition_processing')
{"condition": "HAVING", "original_condition": "max_c < 707 and (max_c > 300 or max_c < 135)", "steps": [{"transformation": "equality_propagation", "resulting_condition": "max_c < 707 and (max_c > 300 or max_c < 135)"}, {"transformation": "constant_propagation", "resulting_condition": "max_c < 707 and (max_c > 300 or max_c < 135)"}, {"transformation": "trivial_condition_removal", "resulting_condition": "max_c < 707 and (max_c > 300 or max_c < 135)"}]}
explain select /*+ NO_DERIVED_CONDITION_PUSHDOWN(v1) */ * from v1,t2 where
((v1.max_c>300) and (v1.avg_c>t2.d) and (v1.b=t2.b)) or
((v1.max_c<135) and (v1.max_c<t2.c) and (v1.a=t2.a));
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	2	Using where
1	PRIMARY	t2	ALL	NULL	NULL	NULL	NULL	9	Using where; Using join buffer (flat, BNL join)
2	DERIVED	t1	ALL	NULL	NULL	NULL	NULL	20	Using temporary; Using filesort
select json_extract(trace, '$.steps[1].join_optimization.steps[7].join_optimization.steps[0].condition_processing') from information_schema.optimizer_trace;
json_extract(trace, '$.steps[1].join_optimization.steps[7].join_optimization.steps[0].condition_processing')
{"condition": "HAVING", "original_condition": "max_c < 707", "steps": [{"transformation": "equality_propagation", "resulting_condition": "max_c < 707"}, {"transformation": "constant_propagation", "resulting_condition": "max_c < 707"}, {"transformation": "trivial_condition_removal", "resulting_condition": "max_c < 707"}]}
set session optimizer_switch='condition_pushdown_for_derived=off';
explain select * from v1,t2 where
((v1.max_c>300) and (v1.avg_c>t2.d) and (v1.b=t2.b)) or
((v1.max_c<135) and (v1.max_c<t2.c) and (v1.a=t2.a));
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	NULL	NULL	NULL	NULL	9	
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	20	Using where; Using join buffer (flat, BNL join)
2	DERIVED	t1	ALL	NULL	NULL	NULL	NULL	20	Using temporary; Using filesort
select json_extract(trace, '$.steps[1].join_optimization.steps[1].join_optimization.steps[0].condition_processing') from information_schema.optimizer_trace;
json_extract(trace, '$.steps[1].join_optimization.steps[1].join_optimization.steps[0].condition_processing')
{"condition": "HAVING", "original_condition": "max_c < 707", "steps": [{"transformation": "equality_propagation", "resulting_condition": "max_c < 707"}, {"transformation": "constant_propagation", "resulting_condition": "max_c < 707"}, {"transformation": "trivial_condition_removal", "resulting_condition": "max_c < 707"}]}
explain select /*+ DERIVED_CONDITION_PUSHDOWN(v1) */ * from v1,t2 where
((v1.max_c>300) and (v1.avg_c>t2.d) and (v1.b=t2.b)) or
((v1.max_c<135) and (v1.max_c<t2.c) and (v1.a=t2.a));
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	NULL	NULL	NULL	NULL	9	
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	20	Using where; Using join buffer (flat, BNL join)
2	DERIVED	t1	ALL	NULL	NULL	NULL	NULL	20	Using temporary; Using filesort
select json_extract(trace, '$.steps[1].join_optimization.steps[2].join_optimization.steps[0].condition_processing') from information_schema.optimizer_trace;
json_extract(trace, '$.steps[1].join_optimization.steps[2].join_optimization.steps[0].condition_processing')
{"condition": "HAVING", "original_condition": "max_c < 707 and (max_c > 300 or max_c < 135)", "steps": [{"transformation": "equality_propagation", "resulting_condition": "max_c < 707 and (max_c > 300 or max_c < 135)"}, {"transformation": "constant_propagation", "resulting_condition": "max_c < 707 and (max_c > 300 or max_c < 135)"}, {"transformation": "trivial_condition_removal", "resulting_condition": "max_c < 707 and (max_c > 300 or max_c < 135)"}]}
set optimizer_switch=@save_optimizer_switch;
set optimizer_trace=@save_optimizer_trace;
drop view v1;
drop table t1, t2;
