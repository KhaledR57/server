SET sql_mode=ORACLE;
#
#  MDEV-20034 Add support for the pre-defined weak SYS_REFCURSOR
#
CREATE PACKAGE DBMS_OUTPUT AS
PROCEDURE PUT_LINE(s VARCHAR);
END;
/
CREATE PACKAGE BODY DBMS_OUTPUT AS
PROCEDURE PUT_LINE(s VARCHAR) AS
BEGIN
SELECT s AS `` FROM DUAL;
END;
END;
/
CREATE FUNCTION bool_to_char(b BOOLEAN) RETURN VARCHAR AS
BEGIN
RETURN
CASE
WHEN b IS NULL THEN 'NULL'
     WHEN b         THEN 'true'
     WHEN NOT b     THEN 'false'
  END;
END;
/
#
# Hybrid functions
#
CREATE PROCEDURE p1 AS
c0 SYS_REFCURSOR;
c1 SYS_REFCURSOR;
c2 SYS_REFCURSOR;
v INT;
BEGIN
OPEN c1 FOR SELECT 10 FROM DUAL;
c2:= CASE WHEN c0 IS NULL THEN c1 ELSE c0 END;
FETCH c2 INTO v;
DBMS_OUTPUT.PUT_LINE('v=' || v);
END;
/
CALL p1;

v=10
DROP PROCEDURE p1;
CREATE PROCEDURE p1 AS
c0 SYS_REFCURSOR;
c1 SYS_REFCURSOR;
c2 SYS_REFCURSOR;
v INT;
BEGIN
OPEN c1 FOR SELECT 10 FROM DUAL;
c2:= COALESCE(c0,c1);
FETCH c2 INTO v;
DBMS_OUTPUT.PUT_LINE('v=' || v);
END;
/
CALL p1;

v=10
DROP PROCEDURE p1;
CREATE PROCEDURE p1 AS
c0 SYS_REFCURSOR;
c1 SYS_REFCURSOR;
c2 SYS_REFCURSOR;
v INT;
BEGIN
OPEN c1 FOR SELECT 10 FROM DUAL;
c2:= IF(false, c0,c1);
FETCH c2 INTO v;
DBMS_OUTPUT.PUT_LINE('v=' || v);
END;
/
CALL p1;

v=10
DROP PROCEDURE p1;
CREATE PROCEDURE p1 AS
c0 SYS_REFCURSOR;
c1 SYS_REFCURSOR;
c2 SYS_REFCURSOR;
v INT;
BEGIN
OPEN c1 FOR SELECT 10 FROM DUAL;
c2:= GREATEST(c0,c1);
FETCH c2 INTO v;
DBMS_OUTPUT.PUT_LINE('v=' || v);
END;
/
CALL p1;
ERROR HY000: Illegal parameter data types sys_refcursor and sys_refcursor for operation 'greatest'
DROP PROCEDURE p1;
DROP PACKAGE dbms_output;
DROP FUNCTION bool_to_char;
SET sql_mode=DEFAULT;
